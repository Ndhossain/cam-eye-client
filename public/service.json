[
  {
    "Que": "Difference between SQL and NoSQL",
    "Ans": "SQL is the programming language used to interface with relational databases. NoSQL is a class of DBMs that are non-relational and generally do not use SQL. SQL databases have fixed or static or predefined schema but NoSQL have dynamic schema. SQL databases are not suited for hierarchical data storage but NoSQL databases are best suited for hierarchical data storage. SQL databases are best suited for complex queries but NoSQL databases are not so good for complex queries. SQL databases are vertically scalable but NoSQL databases are horizontally scalable. SQL databases are table-based on the other hand NoSQL databases are either key-value pairs, document-based, graph databases or wide-column stores. This makes relational SQL databases a better option for applications that require multi-row transactions such as an accounting system or for legacy systems that were built for a relational structure."
  },
  {
    "Que": "What is JWT, and how does it work?",
    "Ans": "JWT full form is JSON Web Token. JWT is an open standard (RFC 7519) for securely transmitting information between parties as JSON object. It is compact, readable and digitally signed using a private key/ or a public key pair by the Identity Provider(IdP). The purpose of using JWT is not to hide data but to ensure the authenticity of the data. JWT is signed and encoded, not encrypted. JWT is a token based stateless authentication mechanism. Since it is a client-side based stateless session, server doesn't have to completely rely on a datastore(database) to save session information. A JSON Web Token consists of 3 parts separated by a period. They are header, payload, signature. JWT header consists of token type and algorithm used for signing and encoding. Algorithms can be HMAC, SHA256, RSA, HS256 or RS256. Payload consists of the session data called as claims. Signature is most important part of a JSON Web Token(JWT). Signature is calculated by encoding the header and payload using Base64url Encoding and concatenating them with a period separator. Which is then given to the cryptographic algorithm. Basically the identity provider(IdP) generates a JWT certifying user identity and Resource server decodes and verifies the authenticity of the token using secret salt / public key."
  },
  {
    "Que": "What is the difference between javascript and NodeJS?",
    "Ans": "Javascript is a programming language that is used for writing scripts on the website. But NodeJS is a Javascript runtime environment. Javascript can only be run in the browsers. We can run Javascript outside the browser with the help of NodeJS.JavaScript basically used on client side. But Node.js is mostly used on the server-side. Javascript is capable enough to add HTML and play with the DOM. Nodejs does not have capability to add HTML tags. Javascript can run in any browser engine as like JS core in safari and Spidermonkey in Firefox. V8 is the Javascript engine inside of node.js that parses and runs Javascript. Javascript is used in frontend development. Nodejs is used in server-side development. Some of the javascript frameworks are RamdaJS, TypedJS, etc. Some of the Nodejs modules are Lodash, express etc. These modules are to be imported from npm. JavaScript the upgraded version of ECMA script that uses Chromeâ€™s V8 engine written in C++. Nodejs is written in C, C++ and Javascript."
  },
  {
    "Que": "How does NodeJS handle multiple requests at the same time?",
    "Ans": "NodeJS receives multiple client requests and places them into EventQueue. NodeJS is built with the concept of event-driven architecture. NodeJS has its own EventLoop which is an infinite loop that receives requests and processes them. EventLoop is the listener for the EventQueue. If NodeJS can process the request without I/O blocking then the event loop would itself process the request and sends the response back to the client by itself. But, it is possible to process multiple requests parallelly using the NodeJS cluster module or worker_threads module."
  }
]